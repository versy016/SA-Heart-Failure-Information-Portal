@inherits Umbraco.Cms.Web.Common.Macros.PartialViewMacroPage

@using Microsoft.AspNetCore.Http.Extensions
@using Umbraco.Cms.Core
@using Umbraco.Cms.Core.Security
@using Umbraco.Cms.Web.Website.Controllers
@using Umbraco.Cms.Web.Website.Models
@using Umbraco.Extensions
@inject MemberModelBuilderFactory memberModelBuilderFactory;

@{
    // Build a registration model with parameters
    var registerModel = memberModelBuilderFactory
        .CreateRegisterModel()
        // Set the member type alias to use for the new member
        .WithMemberTypeAlias(Constants.Conventions.MemberTypes.DefaultAlias)
        // If null or not set, this will redirect to the current page
        .WithRedirectUrl("/patientportal/")
        // Set to true if you want the member editable properties shown.
        // It will only displays properties marked as "Member can edit" on the "Info" tab of the Member Type.
        .WithCustomProperties(true)
        .Build();

    var success = TempData["FormSuccess"] != null;
    registerModel.RedirectUrl = "/patientportal/";
}
    <link href="/css/MasterPage.css" rel="stylesheet"/>
    <link href="/css/SignUpPage.css" rel="stylesheet"/>
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/Style.css" rel="stylesheet"/>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.0/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>

@if (success)
{
    @* This message will show if registerModel.RedirectUrl is not defined (default) *@
    <p class="text-success">Registration succeeded.</p>
    using (Html.BeginUmbracoForm<UmbRegisterController>(
                            "HandleRegisterMember",
                            new
                            {
                                RedirectUrl = registerModel.RedirectUrl
                            }));
}
else
{
    using (Html.BeginUmbracoForm<UmbRegisterController>(
            "HandleRegisterMember",
            new {
                MemberTypeAlias = registerModel.MemberTypeAlias,
                UsernameIsEmail = registerModel.UsernameIsEmail,
                RedirectUrl = registerModel.RedirectUrl
            }))
    {
    
    <div class="container-signup">
        <h2 class="signup-h2">Create a New Account</h2>
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="mb-3">
            <label asp-for="@registerModel.Name" class="form-label"></label>
            <input asp-for="@registerModel.Name" class="form-control" aria-required="true" placeholder = "John Smith" />
            <span asp-validation-for="@registerModel.Name" class="form-text text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@registerModel.Email" class="form-label"></label>
            <input asp-for="@registerModel.Email" class="form-control" autocomplete="username" aria-required="true" placeholder = "abc@email.com"  />
            <span asp-validation-for="@registerModel.Email" class="form-text text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@registerModel.Password" class="form-label"></label>
            <input asp-for="@registerModel.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder = "Enter Your Password" />
            <span asp-validation-for="@registerModel.Password" class="form-text text-danger"></span>
        </div>
        <div class="mb-3">
            <label asp-for="@registerModel.ConfirmPassword" class="form-label"></label>
            <input asp-for="@registerModel.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder = "Re-Enter Your Password"/>
            <span asp-validation-for="@registerModel.ConfirmPassword" class="form-text text-danger"></span>
        </div> <Br> 
        
        <!--Security Question--> 
        <select class = "securityOption">
            <option value="Op1">What was the name of your first pet?</option>
            <option value="Op2">What is your mother's maiden name?</option>
            <option value="Op3">In what city were you born?</option>
        </select> <br><br> 
                
        <label>Enter Your Security Question Answer</label><br> 
        <input type = "text" class = "security-input-form" id="security" placeholder = "Security Question"> <br>
        <label>Re-Enter Your Security Question Answer</label><br>
        <input type = "text" class = "resecurity-input-form" id="resecurity" placeholder = "Re-Enter Security Question"> <br> 

        @if (registerModel.MemberProperties != null)
        {
            for (var i = 0; i < registerModel.MemberProperties.Count; i++)
            {
                <div class="mb-3">
                    @Html.LabelFor(m => registerModel.MemberProperties[i].Value, registerModel.MemberProperties[i].Name)
                    <input asp-for="@registerModel.MemberProperties[i].Value" class="form-control" />
                    @Html.HiddenFor(m => registerModel.MemberProperties[i].Alias)
                    <span asp-validation-for="@registerModel.MemberProperties[i].Value" class="form-text text-danger"></span>
                </div>
            }
        }

        <button type="submit" class="button-Register">Register</button>
        
    </div> 
    
    }
}