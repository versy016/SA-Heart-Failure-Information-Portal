@inherits Umbraco.Cms.Web.Common.Macros.PartialViewMacroPage


@using Umbraco.Cms.Web.Common.Models
@using Umbraco.Cms.Web.Common.Security
@using Umbraco.Cms.Web.Website.Controllers
@using Umbraco.Cms.Core.Services
@using Umbraco.Extensions
@inject IMemberExternalLoginProviders memberExternalLoginProviders
@inject ITwoFactorLoginService twoFactorLoginService
@{
    var loginModel = new LoginModel();
    // You can modify this to redirect to a different URL instead of the current one
    loginModel.RedirectUrl = "/patientportal/";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.0/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>

<!--CSS--> 

<link href="/css/MasterPage.css" rel="stylesheet"/>
<link href="/css/SignUpPage.css" rel="stylesheet"/>
<link href="/css/bootstrap.min.css" rel="stylesheet">
<link href="/css/Style.css" rel="stylesheet">

<!--JS-->
<script>
    
    //Registration Conditional Statement
    function regOption() { 
       //Opens the window corresponding to the drop down option
        var dropdown = document.getElementById("Reg-Option");
        var selectedValue = dropdown.options[dropdown.selectedIndex].value;
        
        if (selectedValue == "1") {
          window.open("/sign-up/");
        } else if (selectedValue == "2") {
          window.open("/clinician-committee-register/");
        } else if (selectedValue == "3") {
          window.open("/clinician-committee-register/");
        } 
    } 
    
    //Clinican Page or Patient Page
    function pageOption() { 
       //Opens the window corresponding to the drop down option
        var dropdown = document.getElementById("Reg-Option");
        var selectedValue = dropdown.options[dropdown.selectedIndex].value;
        
        if (selectedValue == "1") {
          window.open("/patientportal/");
        } else if (selectedValue == "2") {
          window.open("/clinicianportal/");
        } else if (selectedValue == "3") {
          window.open("/clinicianportal/");
        } 
    } 
    
    
</script>


@if (ViewData.TryGetTwoFactorProviderNames(out var providerNames))
{

    @foreach (var providerName in providerNames)
    {
        <div class="2fa-form">
            <h4>Two factor with @providerName.</h4>
            <div asp-validation-summary="All" class="text-danger"></div>
            @using (Html.BeginUmbracoForm<UmbTwoFactorLoginController>(nameof(UmbTwoFactorLoginController.Verify2FACode)))
            {

                <text>
                    <input type="hidden" name="provider" value="@providerName"/>
                    Input security code: <input name="code" value=""/><br/>
                    <button type="submit" class="btn btn-primary">Validate</button>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                </text>
            }
        </div>
    }

}
else
{
    <div class="login-form">
    
        @using (Html.BeginUmbracoForm<UmbLoginController>(
            "HandleLogin", new { RedirectUrl = loginModel.RedirectUrl })) {
            <div class ="container-signup"> 
                <h2 class="h2-login">Login</h2>
                <hr />
                
                <div asp-validation-summary="ModelOnly" class="text-danger"></div> 
                
                <div class="mb-3">
                    <label asp-for="@loginModel.Username" class="form-label"></label>
                    <input asp-for="@loginModel.Username" class="form-control" />
                    <span asp-validation-for="@loginModel.Username" class="form-text text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="@loginModel.Password" class="form-label"></label>
                    <input asp-for="@loginModel.Password" class="form-control" />
                    <span asp-validation-for="@loginModel.Password" class="form-text text-danger"></span>
                </div>
                <div class="mb-3-form-check">
                    <input asp-for="@loginModel.RememberMe" class="form-check-input-remember">
                    <label asp-for="@loginModel.RememberMe" class="form-check-remember">
                        @Html.DisplayNameFor(m => loginModel.RememberMe)
                    </label><br>
                    
                    
                    
                </div>
                
                <!--Log in page--> 
                <button type="submit" class="button-login" onclick="pageOption()">Log in</button>
                
                <!--Links to the sign up page--> 
                
                <!-- Drop Down Menu --> 
                <select class = "Reg-Option" id="Reg-Option">
                  <option value="1">Member</option>
                  <option value="2">Clinician</option>
                  <option value="3">Committee</option>
                </select>
                
                <button type="sign-up" class="button-admin"><a href = "https://localhost:44363/umbraco" class="logintext">Admin</a></button>
                <button type="sign-up" class="button-signup" onclick="regOption()">Sign Up</button><br> 
                
                <!-- Help -->
                <div class = "Tool-Tip-Help">
                    <p style="color:black"><b>Help</b></p>
                    <p style="color:black"><b>Member </b>A patient who suffer from cardiovascular health issues, and require accesses to additional services and resources</p>
                    <p style="color:black"><b>Clinician </b>A heterogeneous medical professional and academics, spanning from doctors, GP’s heart specialists, nurses, etc who are either practising or non-practising</p>
                    <p style="color:black"><b>Committee </b>Active members of the SA CEIH HF subcommittee who comprise of health care professionals, and medical academics who specialise in theory rather than treatment and are a part of the CEIH</p> 
                </div>

            </div> 
        }
    @{
        var loginProviders = await memberExternalLoginProviders.GetMemberProvidersAsync();
        var externalSignInError = ViewData.GetExternalSignInProviderErrors();
    
        @if (loginProviders.Any())
        {
            <hr/>
            <h4>Or using external providers</h4>
            @if (externalSignInError?.AuthenticationType is null && externalSignInError?.Errors.Any() == true)
            {
                @Html.DisplayFor(x => externalSignInError.Errors);
            }
    
            @foreach (var login in await memberExternalLoginProviders.GetMemberProvidersAsync())
            {
    
                @using (Html.BeginUmbracoForm<UmbExternalLoginController>(nameof(UmbExternalLoginController.ExternalLogin)))
                {
                    <button type="submit" name="provider" value="@login.ExternalLoginProvider.AuthenticationType">
                        Sign in with @login.AuthenticationScheme.DisplayName
                    </button>
                    
                    if (externalSignInError?.AuthenticationType == login.ExternalLoginProvider.AuthenticationType)
                    {
                        @Html.DisplayFor(x => externalSignInError.Errors);
                    }
                }
            }
        }
    }
    
    </div>
}